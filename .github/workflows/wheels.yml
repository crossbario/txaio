# GitHub Actions workflow for building and publishing txaio wheels.
#
# This is a simplified version based on the autobahn-python workflow,
# adapted for a pure Python package.
#
name: wheels

on:
  # Build wheels on feature branches and PRs (test only)
  push:
    branches: ["**"]
  pull_request:
    branches: [main]

  # Publish to GitHub Releases when merged to master
  # Publish to PyPI when tagged
  workflow_dispatch:

env:
  # Ensure uv and just are available in PATH
  UV_CACHE_DIR: ${{ github.workspace }}/.uv-cache

jobs:
  build-wheels:
    name: Build wheels
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install build just

      - name: Build package
        run: just build

      - name: Upload distribution package
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  publish-github-releases:
    name: Publish to GitHub Releases
    needs: build-wheels
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Download distribution package
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: List all artifacts
        run: |
          echo "All built artifacts:"
          ls -la dist/

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Generate release tag based on timestamp and commit
          RELEASE_TAG="wheels-$(date +'%Y%m%d')-${{ GITHUB_SHA::8 }}"

          # Create release
          gh release create "$RELEASE_TAG" \
            --repo "$GITHUB_REPOSITORY" \
            --title "Wheels Build - $(date +'%Y-%m-%d')" \
            --notes "Automated wheel build from commit ${{ GITHUB_SHA::8 }}" \
            dist/*

  publish-pypi:
    name: Publish to PyPI
    needs: build-wheels
    runs-on: ubuntu-latest
    # Run only when a tag is pushed
    if: startsWith(github.ref, 'refs/tags/')

    environment:
      name: pypi
      url: https://pypi.org/p/txaio

    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing

    steps:
      - name: Download distribution package
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true